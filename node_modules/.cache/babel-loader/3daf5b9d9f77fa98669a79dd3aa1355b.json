{"ast":null,"code":"\"use strict\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar BGCEffect = function () {\n  /**\r\n   * @param {Object} element \r\n   */\n  function BGCEffect(element) {\n    _classCallCheck(this, BGCEffect);\n\n    if (element) {\n      this.element = element;\n    } else {\n      if (document && document.body) {\n        this.element = document.body;\n      } else {\n        this.element = null;\n      }\n    }\n\n    this.usedColors = {};\n\n    this._checkElement();\n  }\n  /**\r\n   * @param {number} duration \r\n   */\n\n\n  _createClass(BGCEffect, [{\n    key: \"start\",\n    value: function start() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      if (this._checkElement()) this._colorEffect(Math.abs(duration), this.element);\n    }\n    /**\r\n     * @param {number} duration \r\n     * @param {Object} element \r\n     */\n\n  }, {\n    key: \"_colorEffect\",\n    value: function _colorEffect(duration, element) {\n      var _this = this;\n\n      var color = this._randomColor();\n\n      while (this._colorIsUsed(color)) {\n        color = this._randomColor();\n      }\n\n      element.style.backgroundColor = color;\n      this.usedColors[color] = true;\n      if (duration > 0) setTimeout(function () {\n        _this._colorEffect(duration - 1, element);\n      }, 1000);\n    }\n  }, {\n    key: \"_randomColor\",\n    value: function _randomColor() {\n      var rgb = [0, 0, 0].map(function (c) {\n        return Math.floor(Math.random() * 255);\n      });\n      return \"rgb(\" + rgb.join(\",\") + \")\";\n    }\n    /**\r\n     * @param {number} color \r\n     */\n\n  }, {\n    key: \"_colorIsUsed\",\n    value: function _colorIsUsed(color) {\n      return this.usedColors[color] !== undefined;\n    }\n  }, {\n    key: \"_checkElement\",\n    value: function _checkElement() {\n      if (!this.element) {\n        console.error(\"No element supplied to BGCEffect\");\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return BGCEffect;\n}();\n\nmodule.exports = BGCEffect;","map":null,"metadata":{},"sourceType":"script"}