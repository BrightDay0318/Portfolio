{"ast":null,"code":"var _possibleConstructorReturn = require(\"/Volumes/Data/Mywork/WEB/ReactJS/Portfolio/frontend/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Volumes/Data/Mywork/WEB/ReactJS/Portfolio/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Volumes/Data/Mywork/WEB/ReactJS/Portfolio/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Volumes/Data/Mywork/WEB/ReactJS/Portfolio/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Volumes/Data/Mywork/WEB/ReactJS/Portfolio/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\n!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports._vantaEffect = t() : e._vantaEffect = t();\n}(\"undefined\" != typeof self ? self : this, function () {\n  return function (e) {\n    var t = {};\n\n    function i(n) {\n      if (t[n]) return t[n].exports;\n      var o = t[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return e[n].call(o.exports, o, o.exports, i), o.l = !0, o.exports;\n    }\n\n    return i.m = e, i.c = t, i.d = function (e, t, n) {\n      i.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: n\n      });\n    }, i.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, i.t = function (e, t) {\n      if (1 & t && (e = i(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var n = Object.create(null);\n      if (i.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var o in e) {\n        i.d(n, o, function (t) {\n          return e[t];\n        }.bind(null, o));\n      }\n      return n;\n    }, i.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return i.d(t, \"a\", t), t;\n    }, i.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, i.p = \"\", i(i.s = 17);\n  }({\n    0: function _(e, t, i) {\n      \"use strict\";\n\n      function n(e, t) {\n        for (var _i in t) {\n          t.hasOwnProperty(_i) && (e[_i] = t[_i]);\n        }\n\n        return e;\n      }\n\n      function o() {\n        return \"undefined\" != typeof navigator ? /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth < 600 : null;\n      }\n\n      i.d(t, \"c\", function () {\n        return n;\n      }), i.d(t, \"e\", function () {\n        return o;\n      }), i.d(t, \"i\", function () {\n        return r;\n      }), i.d(t, \"h\", function () {\n        return s;\n      }), i.d(t, \"g\", function () {\n        return a;\n      }), i.d(t, \"f\", function () {\n        return l;\n      }), i.d(t, \"a\", function () {\n        return h;\n      }), i.d(t, \"b\", function () {\n        return c;\n      }), i.d(t, \"d\", function () {\n        return u;\n      }), Number.prototype.clamp = function (e, t) {\n        return Math.min(Math.max(this, e), t);\n      };\n\n      var r = function r(e) {\n        return e[Math.floor(Math.random() * e.length)];\n      };\n\n      function s(e, t) {\n        return null == e && (e = 0), null == t && (t = 1), e + Math.random() * (t - e);\n      }\n\n      function a(e, t) {\n        return null == e && (e = 0), null == t && (t = 1), Math.floor(e + Math.random() * (t - e + 1));\n      }\n\n      var l = function l(e) {\n        return document.querySelector(e);\n      },\n          h = function h(e) {\n        return \"number\" == typeof e ? \"#\" + (\"00000\" + e.toString(16)).slice(-6) : e;\n      },\n          c = function c(e) {\n        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var i = h(e),\n            n = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(i),\n            o = n ? {\n          r: parseInt(n[1], 16),\n          g: parseInt(n[2], 16),\n          b: parseInt(n[3], 16)\n        } : null;\n        return \"rgba(\" + o.r + \",\" + o.g + \",\" + o.b + \",\" + t + \")\";\n      },\n          u = function u(e) {\n        return .299 * e.r + .587 * e.g + .114 * e.b;\n      };\n    },\n    1: function _(e, t, i) {\n      \"use strict\";\n\n      i.d(t, \"a\", function () {\n        return s;\n      });\n      var n = i(0);\n      var o = \"object\" == typeof window;\n      var r = o && window.THREE || {};\n      o && !window.VANTA && (window.VANTA = {});\n      var s = o && window.VANTA || {};\n      s.register = function (e, t) {\n        return s[e] = function (e) {\n          return new t(e);\n        };\n      }, s.version = \"0.5.9\";\n\n      var a = function a() {\n        return Array.prototype.unshift.call(arguments, \"[VANTA]\"), console.error.apply(this, arguments);\n      };\n\n      s.VantaBase =\n      /*#__PURE__*/\n      function () {\n        function _class() {\n          var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          _classCallCheck(this, _class);\n\n          if (!o) return !1;\n          if (s.current = this, this.windowMouseMoveWrapper = this.windowMouseMoveWrapper.bind(this), this.windowTouchWrapper = this.windowTouchWrapper.bind(this), this.resize = this.resize.bind(this), this.animationLoop = this.animationLoop.bind(this), this.restart = this.restart.bind(this), this.options = Object(n.c)({\n            mouseControls: !0,\n            touchControls: !0,\n            minHeight: 200,\n            minWidth: 200,\n            scale: 1,\n            scaleMobile: 1\n          }, this.defaultOptions), (e instanceof HTMLElement || \"string\" == typeof e) && (e = {\n            el: e\n          }), Object(n.c)(this.options, e), this.options.THREE && (r = this.options.THREE), this.el = this.options.el, null == this.el) a('Instance needs \"el\" param!');else if (!(this.options.el instanceof HTMLElement)) {\n            var _e = this.el;\n            if (this.el = Object(n.f)(_e), !this.el) return void a(\"Cannot find element\", _e);\n          }\n          this.prepareEl(), this.initThree(), this.setSize();\n\n          try {\n            this.init();\n          } catch (e) {\n            return a(\"Init error\", e), this.renderer && this.renderer.domElement && this.el.removeChild(this.renderer.domElement), void (this.options.backgroundColor && (console.log(\"[VANTA] Falling back to backgroundColor\"), this.el.style.background = Object(n.a)(this.options.backgroundColor)));\n          }\n\n          var t = window.addEventListener;\n          t(\"resize\", this.resize), this.resize(), this.animationLoop(), this.options.mouseControls && (t(\"scroll\", this.windowMouseMoveWrapper), t(\"mousemove\", this.windowMouseMoveWrapper)), this.options.touchControls && (t(\"touchstart\", this.windowTouchWrapper), t(\"touchmove\", this.windowTouchWrapper));\n        }\n\n        _createClass(_class, [{\n          key: \"setOptions\",\n          value: function setOptions() {\n            var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            Object(n.c)(this.options, e);\n          }\n        }, {\n          key: \"prepareEl\",\n          value: function prepareEl() {\n            var e, t;\n            if (\"undefined\" != typeof Node && Node.TEXT_NODE) for (e = 0; e < this.el.childNodes.length; e++) {\n              var _t = this.el.childNodes[e];\n\n              if (_t.nodeType === Node.TEXT_NODE) {\n                var _e2 = document.createElement(\"span\");\n\n                _e2.textContent = _t.textContent, _t.parentElement.insertBefore(_e2, _t), _t.remove();\n              }\n            }\n\n            for (e = 0; e < this.el.children.length; e++) {\n              t = this.el.children[e], \"static\" === getComputedStyle(t).position && (t.style.position = \"relative\"), \"auto\" === getComputedStyle(t).zIndex && (t.style.zIndex = 1);\n            }\n\n            \"static\" === getComputedStyle(this.el).position && (this.el.style.position = \"relative\");\n          }\n        }, {\n          key: \"applyCanvasStyles\",\n          value: function applyCanvasStyles(e) {\n            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            Object(n.c)(e.style, {\n              position: \"absolute\",\n              zIndex: 0,\n              top: 0,\n              left: 0,\n              background: \"\"\n            }), Object(n.c)(e.style, t), e.classList.add(\"vanta-canvas\");\n          }\n        }, {\n          key: \"initThree\",\n          value: function initThree() {\n            r.WebGLRenderer ? (this.renderer = new r.WebGLRenderer({\n              alpha: !0,\n              antialias: !0\n            }), this.el.appendChild(this.renderer.domElement), this.applyCanvasStyles(this.renderer.domElement), isNaN(this.options.backgroundAlpha) && (this.options.backgroundAlpha = 1), this.scene = new r.Scene()) : console.warn(\"[VANTA] No THREE defined on window\");\n          }\n        }, {\n          key: \"getCanvasElement\",\n          value: function getCanvasElement() {\n            return this.renderer ? this.renderer.domElement : this.p5renderer ? this.p5renderer.canvas : void 0;\n          }\n        }, {\n          key: \"windowMouseMoveWrapper\",\n          value: function windowMouseMoveWrapper(e) {\n            var t = this.getCanvasElement();\n            if (!t) return !1;\n            var i = t.getBoundingClientRect(),\n                n = e.clientX - i.left,\n                o = e.clientY - i.top;\n            n >= 0 && o >= 0 && n <= i.width && o <= i.height && (this.mouseX = n, this.mouseY = o, this.options.mouseEase || this.triggerMouseMove(n, o));\n          }\n        }, {\n          key: \"windowTouchWrapper\",\n          value: function windowTouchWrapper(e) {\n            if (1 === e.touches.length) {\n              var _t2 = this.getCanvasElement();\n\n              if (!_t2) return !1;\n\n              var _i2 = _t2.getBoundingClientRect(),\n                  _n = e.touches[0].clientX - _i2.left,\n                  _o = e.touches[0].clientY - _i2.top;\n\n              _n >= 0 && _o >= 0 && _n <= _i2.width && _o <= _i2.height && (this.mouseX = _n, this.mouseY = _o, this.options.mouseEase || this.triggerMouseMove(_n, _o));\n            }\n          }\n        }, {\n          key: \"triggerMouseMove\",\n          value: function triggerMouseMove(e, t) {\n            this.uniforms && (this.uniforms.u_mouse.value.x = e / this.scale, this.uniforms.u_mouse.value.y = t / this.scale);\n            var i = e / this.width,\n                n = t / this.height;\n            \"function\" == typeof this.onMouseMove && this.onMouseMove(i, n);\n          }\n        }, {\n          key: \"setSize\",\n          value: function setSize() {\n            this.scale || (this.scale = 1), Object(n.e)() && this.options.scaleMobile ? this.scale = this.options.scaleMobile : this.options.scale && (this.scale = this.options.scale), this.width = Math.max(this.el.offsetWidth, this.options.minWidth), this.height = Math.max(this.el.offsetHeight, this.options.minHeight);\n          }\n        }, {\n          key: \"resize\",\n          value: function resize() {\n            this.setSize(), this.camera && (this.camera.aspect = this.width / this.height, \"function\" == typeof this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix()), this.renderer && (this.renderer.setSize(this.width, this.height), this.renderer.setPixelRatio(window.devicePixelRatio / this.scale)), \"function\" == typeof this.onResize && this.onResize();\n          }\n        }, {\n          key: \"isOnScreen\",\n          value: function isOnScreen() {\n            var e = this.el.offsetHeight,\n                t = this.el.getBoundingClientRect(),\n                i = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop,\n                n = t.top + i;\n            return n - window.innerHeight <= i && i <= n + e;\n          }\n        }, {\n          key: \"animationLoop\",\n          value: function animationLoop() {\n            return this.t || (this.t = 0), this.t += 1, this.t2 || (this.t2 = 0), this.t2 += this.options.speed || 1, this.uniforms && (this.uniforms.u_time.value = .016667 * this.t2), this.options.mouseEase && (this.mouseEaseX = this.mouseEaseX || this.mouseX || 0, this.mouseEaseY = this.mouseEaseY || this.mouseY || 0, Math.abs(this.mouseEaseX - this.mouseX) + Math.abs(this.mouseEaseY - this.mouseY) > .1 && (this.mouseEaseX = this.mouseEaseX + .05 * (this.mouseX - this.mouseEaseX), this.mouseEaseY = this.mouseEaseY + .05 * (this.mouseY - this.mouseEaseY), this.triggerMouseMove(this.mouseEaseX, this.mouseEaseY))), (this.isOnScreen() || this.options.forceAnimate) && (\"function\" == typeof this.onUpdate && this.onUpdate(), this.scene && this.camera && (this.renderer.render(this.scene, this.camera), this.renderer.setClearColor(this.options.backgroundColor, this.options.backgroundAlpha)), this.fps && this.fps.update && this.fps.update()), this.req = window.requestAnimationFrame(this.animationLoop);\n          }\n        }, {\n          key: \"restart\",\n          value: function restart() {\n            if (this.scene) for (; this.scene.children.length;) {\n              this.scene.remove(this.scene.children[0]);\n            }\n            \"function\" == typeof this.onRestart && this.onRestart(), this.init();\n          }\n        }, {\n          key: \"init\",\n          value: function init() {\n            \"function\" == typeof this.onInit && this.onInit();\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            \"function\" == typeof this.onDestroy && this.onDestroy();\n            var e = window.removeEventListener;\n            e(\"touchstart\", this.windowTouchWrapper), e(\"touchmove\", this.windowTouchWrapper), e(\"scroll\", this.windowMouseMoveWrapper), e(\"mousemove\", this.windowMouseMoveWrapper), e(\"resize\", this.resize), window.cancelAnimationFrame(this.req), this.renderer && (this.renderer.domElement && this.el.removeChild(this.renderer.domElement), this.renderer = null, this.scene = null);\n          }\n        }]);\n\n        return _class;\n      }(), t.b = s.VantaBase;\n    },\n    17: function _(e, t, i) {\n      \"use strict\";\n\n      i.r(t);\n      var n = i(1),\n          o = i(0);\n\n      function r(e, t, i) {\n        this.variables = [], this.currentTextureIndex = 0;\n        var n = new THREE.Scene(),\n            o = new THREE.Camera();\n        o.position.z = 1;\n        var r = {\n          texture: {\n            value: null\n          }\n        },\n            s = h(\"uniform sampler2D texture;\\n\\nvoid main() {\\n\\n\\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n\\n\\tgl_FragColor = texture2D( texture, uv );\\n\\n}\\n\", r),\n            a = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), s);\n\n        function l(i) {\n          i.defines.resolution = \"vec2( \" + e.toFixed(1) + \", \" + t.toFixed(1) + \" )\";\n        }\n\n        function h(e, t) {\n          t = t || {};\n          var i = new THREE.ShaderMaterial({\n            uniforms: t,\n            vertexShader: \"void main()\\t{\\n\\n\\tgl_Position = vec4( position, 1.0 );\\n\\n}\\n\",\n            fragmentShader: e\n          });\n          return l(i), i;\n        }\n\n        n.add(a), this.addVariable = function (e, t, i) {\n          var n = {\n            name: e,\n            initialValueTexture: i,\n            material: this.createShaderMaterial(t),\n            dependencies: null,\n            renderTargets: [],\n            wrapS: null,\n            wrapT: null,\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter\n          };\n          return this.variables.push(n), n;\n        }, this.setVariableDependencies = function (e, t) {\n          e.dependencies = t;\n        }, this.init = function () {\n          if (!i.extensions.get(\"OES_texture_float\")) return \"No OES_texture_float support for float textures.\";\n          if (0 === i.capabilities.maxVertexTextures) return \"No support for vertex shader textures.\";\n\n          for (var n = 0; n < this.variables.length; n++) {\n            var o = this.variables[n];\n            o.renderTargets[0] = this.createRenderTarget(e, t, o.wrapS, o.wrapT, o.minFilter, o.magFilter), o.renderTargets[1] = this.createRenderTarget(e, t, o.wrapS, o.wrapT, o.minFilter, o.magFilter), this.renderTexture(o.initialValueTexture, o.renderTargets[0]), this.renderTexture(o.initialValueTexture, o.renderTargets[1]);\n            var r = o.material,\n                s = r.uniforms;\n            if (null !== o.dependencies) for (var a = 0; a < o.dependencies.length; a++) {\n              var l = o.dependencies[a];\n\n              if (l.name !== o.name) {\n                for (var h = !1, c = 0; c < this.variables.length; c++) {\n                  if (l.name === this.variables[c].name) {\n                    h = !0;\n                    break;\n                  }\n                }\n\n                if (!h) return \"Variable dependency not found. Variable=\" + o.name + \", dependency=\" + l.name;\n              }\n\n              s[l.name] = {\n                value: null\n              }, r.fragmentShader = \"\\nuniform sampler2D \" + l.name + \";\\n\" + r.fragmentShader;\n            }\n          }\n\n          return this.currentTextureIndex = 0, null;\n        }, this.compute = function () {\n          for (var e = this.currentTextureIndex, t = 0 === this.currentTextureIndex ? 1 : 0, i = 0, n = this.variables.length; i < n; i++) {\n            var o = this.variables[i];\n            if (null !== o.dependencies) for (var r = o.material.uniforms, s = 0, a = o.dependencies.length; s < a; s++) {\n              var l = o.dependencies[s];\n              r[l.name].value = l.renderTargets[e].texture;\n            }\n            this.doRenderTarget(o.material, o.renderTargets[t]);\n          }\n\n          this.currentTextureIndex = t;\n        }, this.getCurrentRenderTarget = function (e) {\n          return e.renderTargets[this.currentTextureIndex];\n        }, this.getAlternateRenderTarget = function (e) {\n          return e.renderTargets[0 === this.currentTextureIndex ? 1 : 0];\n        }, this.addResolutionDefine = l, this.createShaderMaterial = h, this.createRenderTarget = function (i, n, o, r, s, a) {\n          i = i || e, n = n || t, o = o || THREE.ClampToEdgeWrapping, r = r || THREE.ClampToEdgeWrapping, s = s || THREE.NearestFilter, a = a || THREE.NearestFilter;\n          var l = \"undefined\" != typeof navigator ? navigator.userAgent : \"\";\n          return new THREE.WebGLRenderTarget(i, n, {\n            wrapS: o,\n            wrapT: r,\n            minFilter: s,\n            magFilter: a,\n            format: THREE.RGBAFormat,\n            type: /(iPad|iPhone|iPod)/g.test(l) ? THREE.HalfFloatType : THREE.FloatType,\n            stencilBuffer: !1\n          });\n        }, this.createTexture = function (i, n) {\n          i = i || e, n = n || t;\n          var o = new Float32Array(i * n * 4),\n              r = new THREE.DataTexture(o, e, t, THREE.RGBAFormat, THREE.FloatType);\n          return r.needsUpdate = !0, r;\n        }, this.renderTexture = function (e, t) {\n          r.texture.value = e, this.doRenderTarget(s, t), r.texture.value = null;\n        }, this.doRenderTarget = function (e, t) {\n          a.material = e, i.render(n, o, t), a.material = s;\n        };\n      }\n\n      var s = \"object\" == typeof window && window.THREE;\n      var a = !Object(o.e)();\n      var l = 32,\n          h = l * l;\n      var c = 800,\n          u = c / 2;\n      var d, p;\n\n      var f = function f(e) {\n        (d = function d() {\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var i = this;\n\n          function n(n, o, r) {\n            var s = 1.5 * (t.birdSize || 1);\n            i.vertices.push(new e.Vector3(n * s, o * s, r * s));\n          }\n\n          function o(t, n, o) {\n            i.faces.push(new e.Face3(t, n, o));\n          }\n\n          e.Geometry.call(this), n(5, 0, 0), n(-5, -1, 1), n(-5, 0, 0), n(-5, -2, -1), n(0, 2, -6), n(0, 2, 6), n(2, 0, 0), n(-3, 0, 0), o(0, 2, 1), o(4, 7, 6), o(5, 6, 7), this.computeFaceNormals();\n        }).prototype = Object.create(e.Geometry.prototype), p = function p(t) {\n          var i,\n              n,\n              o = new e.Vector3(),\n              r = 500,\n              s = 500,\n              a = 200,\n              l = t;\n          this.position = new e.Vector3(), this.velocity = new e.Vector3(), i = new e.Vector3(), this.setGoal = function (e) {\n            n = e;\n          }, this.setWorldSize = function (e, t, i) {\n            r = e, s = t, a = i;\n          }, this.run = function (e) {\n            o.set(-r, this.position.y, this.position.z), (o = this.avoid(o)).multiplyScalar(5), i.add(o), o.set(r, this.position.y, this.position.z), (o = this.avoid(o)).multiplyScalar(5), i.add(o), o.set(this.position.x, -s, this.position.z), (o = this.avoid(o)).multiplyScalar(5), i.add(o), o.set(this.position.x, s, this.position.z), (o = this.avoid(o)).multiplyScalar(5), i.add(o), o.set(this.position.x, this.position.y, -a), (o = this.avoid(o)).multiplyScalar(5), i.add(o), o.set(this.position.x, this.position.y, a), (o = this.avoid(o)).multiplyScalar(5), i.add(o), Math.random() > .5 && this.flock(e), this.move();\n          }, this.flock = function (e) {\n            n && i.add(this.reach(n, .005)), i.add(this.alignment(e)), i.add(this.cohesion(e)), i.add(this.separation(e));\n          }, this.move = function () {\n            this.velocity.add(i);\n            var e = this.velocity.length();\n            e > 2.5 && this.velocity.divideScalar(e / 2.5), this.position.add(this.velocity), i.set(0, 0, 0);\n          }, this.checkBounds = function () {\n            this.position.x > r && (this.position.x = -r), this.position.x < -r && (this.position.x = r), this.position.y > s && (this.position.y = -s), this.position.y < -s && (this.position.y = s), this.position.z > a && (this.position.z = -a), this.position.z < -a && (this.position.z = a);\n          }, this.avoid = function (t) {\n            var i = new e.Vector3();\n            return i.copy(this.position), i.sub(t), i.multiplyScalar(1 / this.position.distanceToSquared(t)), i;\n          }, this.repulse = function (t) {\n            var n = this.position.distanceTo(t);\n\n            if (n < 150) {\n              var o = new e.Vector3();\n              o.subVectors(this.position, t), o.multiplyScalar(.5 / n), i.add(o);\n            }\n          }, this.reach = function (t, i) {\n            var n = new e.Vector3();\n            return n.subVectors(t, this.position), n.multiplyScalar(i), n;\n          }, this.alignment = function (t) {\n            var i,\n                n,\n                o = new e.Vector3(),\n                r = 0;\n            var s = 100 * l.alignment / 20;\n\n            for (var a = 0, h = t.length; a < h; a++) {\n              Math.random() > .6 || (n = (i = t[a]).position.distanceTo(this.position)) > 0 && n <= s && (o.add(i.velocity), r++);\n            }\n\n            if (r > 0) {\n              o.divideScalar(r);\n              var c = o.length();\n              c > .1 && o.divideScalar(c / .1);\n            }\n\n            return o;\n          }, this.cohesion = function (t) {\n            var i,\n                n,\n                o = new e.Vector3(),\n                r = new e.Vector3(),\n                s = 0;\n            var a = 100 * l.cohesion / 20;\n\n            for (var h = 0, c = t.length; h < c; h++) {\n              Math.random() > .6 || (n = (i = t[h]).position.distanceTo(this.position)) > 0 && n <= a && (o.add(i.position), s++);\n            }\n\n            s > 0 && o.divideScalar(s), r.subVectors(o, this.position);\n            var u = r.length();\n            return u > .1 && r.divideScalar(u / .1), r;\n          }, this.separation = function (t) {\n            var i,\n                n,\n                o = new e.Vector3(),\n                r = new e.Vector3();\n            var s = 100 * l.separation / 20;\n\n            for (var a = 0, h = t.length; a < h; a++) {\n              Math.random() > .6 || (n = (i = t[a]).position.distanceTo(this.position)) > 0 && n <= s && (r.subVectors(this.position, i.position), r.normalize(), r.divideScalar(n), o.add(r));\n            }\n\n            return o;\n          };\n        }, e.BirdGeometry = function (t) {\n          t.quantity && (l = Math.pow(2, t.quantity), h = l * l);\n          var i = 3 * h,\n              n = 3 * i;\n          e.BufferGeometry.call(this);\n          var o = new e.BufferAttribute(new Float32Array(3 * n), 3),\n              r = new e.BufferAttribute(new Float32Array(3 * n), 3),\n              s = new e.BufferAttribute(new Float32Array(2 * n), 2),\n              a = new e.BufferAttribute(new Float32Array(n), 1);\n          this.addAttribute(\"position\", o), this.addAttribute(\"birdColor\", r), this.addAttribute(\"reference\", s), this.addAttribute(\"birdVertex\", a);\n          var c = 0;\n\n          var u = function u() {\n            for (var _e3 = 0; _e3 < arguments.length; _e3++) {\n              o.array[c++] = arguments[_e3];\n            }\n          },\n              d = t.wingSpan || 20,\n              p = t.birdSize || 1;\n\n          for (var _e4 = 0; _e4 < h; _e4++) {\n            u(0, -0, -20 * p, 0, 4 * p, -20 * p, 0, 0, 30 * p), u(0, 0, -15 * p, -d * p, 0, 0, 0, 0, 15 * p), u(0, 0, 15 * p, d * p, 0, 0, 0, 0, -15 * p);\n          }\n\n          var f = {};\n\n          for (c = 0; c < 3 * i; c++) {\n            var _e5 = ~~(c / 3),\n                _i3 = _e5 % l / l,\n                _n2 = ~~(_e5 / l) / l,\n                _o2 = ~~(c / 9) / h,\n                _u = _o2.toString(),\n                _d = -1 != t.colorMode.indexOf(\"Gradient\");\n\n            var _p = void 0;\n\n            _p = !_d && f[_u] ? f[_u] : t.effect.getNewCol(_o2), _d || f[_u] || (f[_u] = _p), r.array[3 * c + 0] = _p.r, r.array[3 * c + 1] = _p.g, r.array[3 * c + 2] = _p.b, s.array[2 * c] = _i3, s.array[2 * c + 1] = _n2, a.array[c] = c % 9;\n          }\n\n          return this.scale(.2, .2, .2);\n        }, e.BirdGeometry.prototype = Object.create(e.BufferGeometry.prototype);\n      },\n          m = \"uniform float time;\\nuniform float delta;\\n\\nvoid main() {\\n\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n  vec4 tmpPos = texture2D( texturePosition, uv );\\n  vec3 position = tmpPos.xyz;\\n  vec3 velocity = texture2D( textureVelocity, uv ).xyz;\\n\\n  float phase = tmpPos.w;\\n\\n  phase = mod( ( phase + delta +\\n    length( velocity.xz ) * delta * 3. +\\n    max( velocity.y, 0.0 ) * delta * 6. ), 62.83 );\\n\\n  gl_FragColor = vec4( position + velocity * delta * 15. , phase );\\n\\n}\",\n          v = \"uniform float time;\\nuniform float testing;\\nuniform float delta; // about 0.016\\nuniform float separationDistance; // 20\\nuniform float alignmentDistance; // 40\\nuniform float cohesionDistance;\\nuniform float speedLimit;\\nuniform float freedomFactor;\\nuniform vec3 predator;\\n\\nconst float width = resolution.x;\\nconst float height = resolution.y;\\n\\nconst float PI = 3.141592653589793;\\nconst float PI_2 = PI * 2.0;\\n// const float VISION = PI * 0.55;\\n\\nfloat zoneRadius = 40.0;\\nfloat zoneRadiusSquared = 1600.0;\\n\\nfloat separationThresh = 0.45;\\nfloat alignmentThresh = 0.65;\\n\\nconst float UPPER_BOUNDS = BOUNDS;\\nconst float LOWER_BOUNDS = -UPPER_BOUNDS;\\n\\nfloat rand(vec2 co){\\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\nvoid main() {\\n\\n  zoneRadius = separationDistance + alignmentDistance + cohesionDistance;\\n  separationThresh = separationDistance / zoneRadius;\\n  alignmentThresh = ( separationDistance + alignmentDistance ) / zoneRadius;\\n  zoneRadiusSquared = zoneRadius * zoneRadius;\\n\\n\\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\\n  vec3 birdPosition, birdVelocity;\\n\\n  vec3 selfPosition = texture2D( texturePosition, uv ).xyz;\\n  vec3 selfVelocity = texture2D( textureVelocity, uv ).xyz;\\n\\n  float dist;\\n  vec3 dir; // direction\\n  float distSquared;\\n\\n  float separationSquared = separationDistance * separationDistance;\\n  float cohesionSquared = cohesionDistance * cohesionDistance;\\n\\n  float f;\\n  float percent;\\n\\n  vec3 velocity = selfVelocity;\\n\\n  float limit = speedLimit;\\n\\n  dir = predator * UPPER_BOUNDS - selfPosition;\\n  dir.z = 0.;\\n  // dir.z *= 0.6;\\n  dist = length( dir );\\n  distSquared = dist * dist;\\n\\n  float preyRadius = 150.0;\\n  float preyRadiusSq = preyRadius * preyRadius;\\n\\n  // move birds away from predator\\n  if (dist < preyRadius) {\\n\\n    f = ( distSquared / preyRadiusSq - 1.0 ) * delta * 100.;\\n    velocity += normalize( dir ) * f;\\n    limit += 5.0;\\n  }\\n\\n  // if (testing == 0.0) {}\\n  // if ( rand( uv + time ) < freedomFactor ) {}\\n\\n  // Attract flocks to the center\\n  vec3 central = vec3( 0., 0., 0. );\\n  dir = selfPosition - central;\\n  dist = length( dir );\\n\\n  dir.y *= 2.5;\\n  velocity -= normalize( dir ) * delta * 5.;\\n\\n  for (float y=0.0;y<height;y++) {\\n    for (float x=0.0;x<width;x++) {\\n\\n      vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;\\n      birdPosition = texture2D( texturePosition, ref ).xyz;\\n\\n      dir = birdPosition - selfPosition;\\n      dist = length(dir);\\n\\n      if (dist < 0.0001) continue;\\n\\n      distSquared = dist * dist;\\n\\n      if (distSquared > zoneRadiusSquared ) continue;\\n\\n      percent = distSquared / zoneRadiusSquared;\\n\\n      if ( percent < separationThresh ) { // low\\n\\n        // Separation - Move apart for comfort\\n        f = (separationThresh / percent - 1.0) * delta;\\n        velocity -= normalize(dir) * f;\\n\\n      } else if ( percent < alignmentThresh ) { // high\\n\\n        // Alignment - fly the same direction\\n        float threshDelta = alignmentThresh - separationThresh;\\n        float adjustedPercent = ( percent - separationThresh ) / threshDelta;\\n\\n        birdVelocity = texture2D( textureVelocity, ref ).xyz;\\n\\n        f = ( 0.5 - cos( adjustedPercent * PI_2 ) * 0.5 + 0.5 ) * delta;\\n        velocity += normalize(birdVelocity) * f;\\n\\n      } else {\\n\\n        // Attraction / Cohesion - move closer\\n        float threshDelta = 1.0 - alignmentThresh;\\n        float adjustedPercent = ( percent - alignmentThresh ) / threshDelta;\\n\\n        f = ( 0.5 - ( cos( adjustedPercent * PI_2 ) * -0.5 + 0.5 ) ) * delta;\\n\\n        velocity += normalize(dir) * f;\\n\\n      }\\n    }\\n  }\\n\\n  // this make tends to fly around than down or up\\n  // if (velocity.y > 0.) velocity.y *= (1. - 0.2 * delta);\\n\\n  // Speed Limits\\n  if ( length( velocity ) > limit ) {\\n    velocity = normalize( velocity ) * limit;\\n  }\\n\\n  gl_FragColor = vec4( velocity, 1.0 );\\n\\n}\",\n          y = \"attribute vec2 reference;\\nattribute float birdVertex;\\n\\nattribute vec3 birdColor;\\n\\nuniform sampler2D texturePosition;\\nuniform sampler2D textureVelocity;\\n\\nvarying vec4 vColor;\\nvarying float z;\\n\\nuniform float time;\\nuniform float birdSize;\\n\\nvoid main() {\\n\\n  vec4 tmpPos = texture2D( texturePosition, reference );\\n  vec3 pos = tmpPos.xyz;\\n  vec3 velocity = normalize(texture2D( textureVelocity, reference ).xyz);\\n\\n  vec3 newPosition = position;\\n\\n  if ( birdVertex == 4.0 || birdVertex == 7.0 ) {\\n    // flap wings\\n    newPosition.y = sin( tmpPos.w ) * 5. * birdSize;\\n  }\\n\\n  newPosition = mat3( modelMatrix ) * newPosition;\\n\\n  velocity.z *= -1.;\\n  float xz = length( velocity.xz );\\n  float xyz = 1.;\\n  float x = sqrt( 1. - velocity.y * velocity.y );\\n\\n  float cosry = velocity.x / xz;\\n  float sinry = velocity.z / xz;\\n\\n  float cosrz = x / xyz;\\n  float sinrz = velocity.y / xyz;\\n\\n  mat3 maty =  mat3(\\n    cosry, 0, -sinry,\\n    0    , 1, 0     ,\\n    sinry, 0, cosry\\n  );\\n\\n  mat3 matz =  mat3(\\n    cosrz , sinrz, 0,\\n    -sinrz, cosrz, 0,\\n    0     , 0    , 1\\n  );\\n  newPosition =  maty * matz * newPosition;\\n  newPosition += pos;\\n  z = newPosition.z;\\n\\n  vColor = vec4( birdColor, 1.0 );\\n  gl_Position = projectionMatrix *  viewMatrix  * vec4( newPosition, 1.0 );\\n}\",\n          g = \"varying vec4 vColor;\\nvarying float z;\\nuniform vec3 color;\\nvoid main() {\\n  // Fake colors for now\\n  float rr = 0.2 + ( 1000. - z ) / 1000. * vColor.x;\\n  float gg = 0.2 + ( 1000. - z ) / 1000. * vColor.y;\\n  float bb = 0.2 + ( 1000. - z ) / 1000. * vColor.z;\\n  gl_FragColor = vec4( rr, gg, bb, 1. );\\n}\",\n          w = function w(e) {\n        var t = e.image.data;\n        var i = 0;\n        var n = t.length;\n        return function () {\n          var e = [];\n\n          for (; i < n;) {\n            var _n3 = Math.random() * c - u,\n                _o3 = Math.random() * c - u,\n                _r = Math.random() * c - u;\n\n            t[i + 0] = _n3, t[i + 1] = _o3, t[i + 2] = _r, t[i + 3] = 1, e.push(i += 4);\n          }\n\n          return e;\n        }();\n      },\n          x = function x(e) {\n        var t = e.image.data;\n        var i = 0;\n        var n = t.length;\n        return function () {\n          var e = [];\n\n          for (; i < n;) {\n            var _n4 = Math.random() - .5,\n                _o4 = Math.random() - .5,\n                _r2 = Math.random() - .5;\n\n            t[i + 0] = 10 * _n4, t[i + 1] = 10 * _o4, t[i + 2] = 10 * _r2, t[i + 3] = 1, e.push(i += 4);\n          }\n\n          return e;\n        }();\n      };\n\n      var b =\n      /*#__PURE__*/\n      function (_n$b) {\n        _inherits(b, _n$b);\n\n        _createClass(b, null, [{\n          key: \"initClass\",\n          value: function initClass() {\n            this.prototype.defaultOptions = {\n              backgroundColor: 465199,\n              color1: 16711680,\n              color2: 53759,\n              colorMode: \"varianceGradient\",\n              birdSize: 1,\n              wingSpan: 30,\n              speedLimit: 5,\n              separation: 20,\n              alignment: 20,\n              cohesion: 20,\n              quantity: 5\n            };\n          }\n        }]);\n\n        function b(e) {\n          var _this;\n\n          _classCallCheck(this, b);\n\n          s = e.THREE || s, f(s), _this = _possibleConstructorReturn(this, _getPrototypeOf(b).call(this, e));\n          return _this;\n        }\n\n        _createClass(b, [{\n          key: \"initComputeRenderer\",\n          value: function initComputeRenderer() {\n            this.gpuCompute = new r(l, l, this.renderer);\n            var e = this.gpuCompute.createTexture(),\n                t = this.gpuCompute.createTexture();\n            w(e), x(t), this.velocityVariable = this.gpuCompute.addVariable(\"textureVelocity\", v, t), this.positionVariable = this.gpuCompute.addVariable(\"texturePosition\", m, e), this.gpuCompute.setVariableDependencies(this.velocityVariable, [this.positionVariable, this.velocityVariable]), this.gpuCompute.setVariableDependencies(this.positionVariable, [this.positionVariable, this.velocityVariable]), this.positionUniforms = this.positionVariable.material.uniforms, this.velocityUniforms = this.velocityVariable.material.uniforms, this.positionUniforms.time = {\n              value: 0\n            }, this.positionUniforms.delta = {\n              value: 0\n            }, this.velocityUniforms.time = {\n              value: 1\n            }, this.velocityUniforms.delta = {\n              value: 0\n            }, this.velocityUniforms.testing = {\n              value: 1\n            }, this.velocityUniforms.separationDistance = {\n              value: 1\n            }, this.velocityUniforms.alignmentDistance = {\n              value: 1\n            }, this.velocityUniforms.cohesionDistance = {\n              value: 1\n            }, this.velocityUniforms.speedLimit = {\n              value: 1\n            }, this.velocityUniforms.freedomFactor = {\n              value: 1\n            }, this.velocityUniforms.predator = {\n              value: new s.Vector3()\n            }, this.velocityVariable.material.defines.BOUNDS = c.toFixed(2), this.velocityVariable.wrapS = s.RepeatWrapping, this.velocityVariable.wrapT = s.RepeatWrapping, this.positionVariable.wrapS = s.RepeatWrapping, this.positionVariable.wrapT = s.RepeatWrapping;\n            var i = this.gpuCompute.init();\n            null !== i && console.error(i);\n          }\n        }, {\n          key: \"initGpgpuBirds\",\n          value: function initGpgpuBirds() {\n            var e = Object.assign({}, this.options, {\n              effect: this\n            }),\n                t = new s.BirdGeometry(e);\n            this.birdUniforms = {\n              color: {\n                value: new s.Color(16720384)\n              },\n              texturePosition: {\n                value: null\n              },\n              textureVelocity: {\n                value: null\n              },\n              time: {\n                value: 1\n              },\n              delta: {\n                value: 0\n              },\n              birdSize: {\n                value: this.options.birdSize\n              }\n            };\n            var i = new s.ShaderMaterial({\n              uniforms: this.birdUniforms,\n              vertexShader: y,\n              fragmentShader: g,\n              side: s.DoubleSide\n            }),\n                n = new s.Mesh(t, i);\n            return n.rotation.y = Math.PI / 2, n.matrixAutoUpdate = !1, n.updateMatrix(), this.scene.add(n);\n          }\n        }, {\n          key: \"getNewCol\",\n          value: function getNewCol(e) {\n            var t = this.options,\n                i = null != t.color1 ? t.color1 : 4456448,\n                n = null != t.color2 ? t.color2 : 6684672,\n                o = new s.Color(i),\n                r = new s.Color(n);\n            var a, l;\n\n            if (l = -1 != t.colorMode.indexOf(\"Gradient\") ? Math.random() : e, 0 == t.colorMode.indexOf(\"variance\")) {\n              var _e6 = (o.r + Math.random() * r.r).clamp(0, 1),\n                  _t3 = (o.g + Math.random() * r.g).clamp(0, 1),\n                  _i4 = (o.b + Math.random() * r.b).clamp(0, 1);\n\n              a = new s.Color(_e6, _t3, _i4);\n            } else a = 0 == t.colorMode.indexOf(\"mix\") ? new s.Color(i + l * n) : o.lerp(r, l);\n\n            return a;\n          }\n        }, {\n          key: \"onInit\",\n          value: function onInit() {\n            this.camera = new s.PerspectiveCamera(75, this.width / this.height, 1, 3e3), this.camera.position.z = 350, this.fog = new s.Fog(16777215, 100, 1e3), this.mouseX = this.mouseY = 0;\n            var e = this.birds = [],\n                t = this.boids = [],\n                i = this.options;\n            var n, o;\n            if (a) try {\n              this.initComputeRenderer(), this.valuesChanger = this.valuesChanger.bind(this), this.valuesChanger(), this.initGpgpuBirds();\n            } catch (e) {\n              console.error(\"[vanta.js] birds init error: \", e);\n            } else {\n              var _a = 6 * Math.pow(2, i.quantity);\n\n              for (var r = 0; r < _a; r++) {\n                (n = t[r] = new p(i)).position.x = 400 * Math.random() - 200, n.position.y = 400 * Math.random() - 200, n.position.z = 400 * Math.random() - 200, n.velocity.x = 2 * Math.random() - 1, n.velocity.y = 2 * Math.random() - 1, n.velocity.z = 2 * Math.random() - 1, n.setWorldSize(500, 500, 300);\n\n                var _c = -1 != i.colorMode.indexOf(\"Gradient\"),\n                    _u2 = new d(i);\n\n                for (var l = 0; l < _u2.faces.length; l++) {\n                  if (_c) for (var h = 0; h < 3; h++) {\n                    var _e7 = this.getNewCol();\n\n                    _u2.faces[l].vertexColors[h] = _e7;\n                  } else {\n                    var _e8 = this.getNewCol(r / _a);\n\n                    _u2.faces[l].vertexColors[0] = _e8, _u2.faces[l].vertexColors[1] = _e8, _u2.faces[l].vertexColors[2] = _e8;\n                  }\n                }\n\n                (o = e[r] = new s.Mesh(_u2, new s.MeshBasicMaterial({\n                  color: 16777215,\n                  side: s.DoubleSide,\n                  vertexColors: s.VertexColors\n                }))).phase = Math.floor(62.83 * Math.random()), o.position.x = t[r].position.x, o.position.y = t[r].position.y, o.position.z = t[r].position.z, this.scene.add(o);\n              }\n            }\n          }\n        }, {\n          key: \"valuesChanger\",\n          value: function valuesChanger() {\n            this.velocityUniforms && (this.velocityUniforms.separationDistance.value = this.options.separation, this.velocityUniforms.alignmentDistance.value = this.options.alignment, this.velocityUniforms.speedLimit.value = this.options.speedLimit, this.velocityUniforms.cohesionDistance.value = this.options.cohesion);\n          }\n        }, {\n          key: \"onUpdate\",\n          value: function onUpdate() {\n            this.now = performance.now(), this.last || (this.last = this.now);\n            var e = (this.now - this.last) / 1e3;\n            if (e > 1 && (e = 1), this.last = this.now, a) this.positionUniforms.time.value = this.now, this.positionUniforms.delta.value = e, this.velocityUniforms.time.value = this.now, this.velocityUniforms.delta.value = e, this.birdUniforms.time.value = this.now, this.birdUniforms.delta.value = e, this.velocityUniforms.predator.value.set(this.mouseX, -this.mouseY, 0), this.mouseX = 1e4, this.mouseY = 1e4, this.gpuCompute.compute(), this.birdUniforms.texturePosition.value = this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture, this.birdUniforms.textureVelocity.value = this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;else {\n              var _e9 = this.birds,\n                  _n5 = this.boids;\n\n              var _o5, _r3;\n\n              for (var t = 0, i = _e9.length; t < i; t++) {\n                (_o5 = _n5[t]).run(_n5), (_r3 = _e9[t]).rotation.y = Math.atan2(-_o5.velocity.z, _o5.velocity.x), _r3.rotation.z = Math.asin(_o5.velocity.y / _o5.velocity.length()), _r3.phase = (_r3.phase + (Math.max(0, _r3.rotation.z) + .1)) % 62.83, _r3.geometry.vertices[5].y = _r3.geometry.vertices[4].y = 5 * Math.sin(_r3.phase) * this.options.birdSize, _r3.geometry.verticesNeedUpdate = !0, _r3.position.x = _n5[t].position.x, _r3.position.y = _n5[t].position.y, _r3.position.z = _n5[t].position.z;\n              }\n            }\n          }\n        }, {\n          key: \"onMouseMove\",\n          value: function onMouseMove(e, t) {\n            if (this.mouseX = e - .5, this.mouseY = t - .5, !a) {\n              var _e10 = this.boids;\n\n              var _t4;\n\n              for (var i = new s.Vector3(this.mouseX * this.width, -this.mouseY * this.height, 0), n = 0, o = _e10.length; n < o; n++) {\n                _t4 = _e10[n], i.z = _t4.position.z, _t4.repulse(i);\n              }\n            }\n          }\n        }, {\n          key: \"onDestroy\",\n          value: function onDestroy() {}\n        }, {\n          key: \"onResize\",\n          value: function onResize() {}\n        }]);\n\n        return b;\n      }(n.b);\n\n      b.initClass();\n      t.default = n.a.register(\"BIRDS\", b);\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"script"}