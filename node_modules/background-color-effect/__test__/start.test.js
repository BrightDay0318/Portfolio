import BGCEffect from '../src/index.js'

let getColor = ( effect ) => effect.element ? effect.element.style.backgroundColor : "none"

describe("BGCEffect.start()", () => {

    test('BGCEffect will start if initially supplied a DOM element', () => {
        
        let effect = new BGCEffect( )
        effect.start( 5 )
        expect( effect.element ).toBeDefined()
        
    });

    test("BGCEffect will change background the specified number of times", () => {

        jest.useFakeTimers();

        let effect = new BGCEffect( )
        effect.start(12)

        jest.runAllTimers()

        expect(setTimeout.mock.calls.length).toBe(12)

    })

    test("element will change background-color after calling start", () => {
        
                jest.useFakeTimers();
        
                let effect = new BGCEffect( ),
                    color1 = getColor( effect ),
                    color2 = '',
                    color3 = ''

                effect.start(4)
                color2 = getColor( effect )

                jest.runAllTimers()
                color3 = getColor( effect )

                console.log( `${color1} != ${color2} != ${color3}` )
                expect( color1 ).not.toBe( color2 )
                expect( color2 ).not.toBe( color3 )
        
            })

})
