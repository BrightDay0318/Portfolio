"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BGCEffect = function () {

    /**
     * @param {Object} element 
     */
    function BGCEffect(element) {
        _classCallCheck(this, BGCEffect);

        if (element) {

            this.element = element;
        } else {

            if (document && document.body) {

                this.element = document.body;
            } else {

                this.element = null;
            }
        }

        this.usedColors = {};
        this._checkElement();
    }

    /**
     * @param {number} duration 
     */


    _createClass(BGCEffect, [{
        key: "start",
        value: function start() {
            var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;


            if (this._checkElement()) this._colorEffect(Math.abs(duration), this.element);
        }

        /**
         * @param {number} duration 
         * @param {Object} element 
         */

    }, {
        key: "_colorEffect",
        value: function _colorEffect(duration, element) {
            var _this = this;

            var color = this._randomColor();

            while (this._colorIsUsed(color)) {

                color = this._randomColor();
            }element.style.backgroundColor = color;
            this.usedColors[color] = true;

            if (duration > 0) setTimeout(function () {
                _this._colorEffect(duration - 1, element);
            }, 1000);
        }
    }, {
        key: "_randomColor",
        value: function _randomColor() {

            var rgb = [0, 0, 0].map(function (c) {
                return Math.floor(Math.random() * 255);
            });

            return "rgb(" + rgb.join(",") + ")";
        }

        /**
         * @param {number} color 
         */

    }, {
        key: "_colorIsUsed",
        value: function _colorIsUsed(color) {

            return this.usedColors[color] !== undefined;
        }
    }, {
        key: "_checkElement",
        value: function _checkElement() {

            if (!this.element) {

                console.error("No element supplied to BGCEffect");
                return false;
            }

            return true;
        }
    }]);

    return BGCEffect;
}();

module.exports = BGCEffect;
